{"files":[[{"path":"C:\\Users\\lmaar\\OneDrive\\Desktop\\NU.txt","fileName":"NU(0)","fileSize":"26","fileData":"yfgvjhbkjnlm;,'./ojmklsd","fileType":"txt","fileNameEncy":"NU.txt(0)-file"}],[{"path":"C:\\Users\\lmaar\\Downloads\\test.txt","fileName":"test(0)","fileSize":"288","fileData":"In this feature, the user shall be able to implement import, export or delete file from thesystem. The user shall be able to export/delete files based on their file name and itscategory. This feature also includes that the user shall be able to see all files availablein the system.","fileType":"txt","fileNameEncy":"test.txt(0)-file"}],[{"path":"C:\\Users\\lmaar\\Downloads\\lma.txt","fileName":"lma(0)","fileSize":"3742","fileData":"n the group project, you will build the backend service for an application called FileManagement which is a document manager that helps you organize your files bykeeping them all in one place. This system allows you to conveniently manage andrecover your files.The main features for this application are:1. File repository which contains the following functionalities:a. Import filesb. Export filesc. Delete files2. File classification based on file category (type, size and custom)3. Version control for the filesFunctional featuresFeature 1: File repository.In this feature, the user shall be able to implement import, export or delete file from thesystem. The user shall be able to export/delete files based on their file name and itscategory. This feature also includes that the user shall be able to see all files availablein the system.Feature 2: File classificationThe user shall be able to classify the files based on their type, size or a custom categorycreated by the user.This feature allows users later to export/delete based on their classification.Feature 3: Version control for the filesIn this feature, the user shall be able to import multi versions for each file; each versioncontaining information about the data file that was imported to the system. The file isrepresented by the last file added by the user, another version is available upon userrequest.This feature is enabled by default; For instance, if the imported file properties (nameand type) are the same of an existing file in the system, then the system stores the fileas the latest version of this file and the current latest version is kept. However, the usershall be able to disable it while he/she is adding a new file, in this case the system shalloverwrite the existing file with new file.This feature also supports rollback feature, which is a feature that allows users toreplace current version with a previous version.Non-functional requirements1. All users should authenticate themself.2. The user should be able to access the system based on their permissions:a. Admin: Full permissionb. Staff: Import/Export but can\u2019t delete or overwrite files.c. Reader: Read only.3. The system should be secure, so all files shall be encrypted in the system.4. The system should be available and accepts all requests coming to it within lessthan 1 second for each request for any file regardless of its size.5. The system should be scalable; for instance, in future, the system should servemillions of users.6. The application should solve the conflict in case two users try to modify the samefile in parallel.7. For debugging/accountability, the application should generate detailed logs forevery action done in the system.8. 90% of the users are reader users.______________________________________________________________________First Delivery:Part 1:● Please write the SRS document for this application.Part 2:In this part of the project, you need to draw the following architectures for the system.● Level 1: System Context diagram: In this level you need to show system usersand the other systems that it interacts with.● Level 2: Container diagram: it shows the high-level shape of the softwarearchitecture and how responsibilities are distributed across it.● Level 3: Component diagram: it shows how a container is made up of a numberof \"components\", what each of those components are and their responsibilities.In your architecture, you should also provide a short description for each component inyour architecture. You need also to show a short description on component interactions(relation) and what its purpose is.","fileType":"txt","fileNameEncy":"lma.txt(0)-file"}],[{"path":"C:\\Users\\lmaar\\Downloads\\lma.txt","fileName":"lma(1)","fileSize":"3742","fileData":"n the group project, you will build the backend service for an application called FileManagement which is a document manager that helps you organize your files bykeeping them all in one place. This system allows you to conveniently manage andrecover your files.The main features for this application are:1. File repository which contains the following functionalities:a. Import filesb. Export filesc. Delete files2. File classification based on file category (type, size and custom)3. Version control for the filesFunctional featuresFeature 1: File repository.In this feature, the user shall be able to implement import, export or delete file from thesystem. The user shall be able to export/delete files based on their file name and itscategory. This feature also includes that the user shall be able to see all files availablein the system.Feature 2: File classificationThe user shall be able to classify the files based on their type, size or a custom categorycreated by the user.This feature allows users later to export/delete based on their classification.Feature 3: Version control for the filesIn this feature, the user shall be able to import multi versions for each file; each versioncontaining information about the data file that was imported to the system. The file isrepresented by the last file added by the user, another version is available upon userrequest.This feature is enabled by default; For instance, if the imported file properties (nameand type) are the same of an existing file in the system, then the system stores the fileas the latest version of this file and the current latest version is kept. However, the usershall be able to disable it while he/she is adding a new file, in this case the system shalloverwrite the existing file with new file.This feature also supports rollback feature, which is a feature that allows users toreplace current version with a previous version.Non-functional requirements1. All users should authenticate themself.2. The user should be able to access the system based on their permissions:a. Admin: Full permissionb. Staff: Import/Export but can\u2019t delete or overwrite files.c. Reader: Read only.3. The system should be secure, so all files shall be encrypted in the system.4. The system should be available and accepts all requests coming to it within lessthan 1 second for each request for any file regardless of its size.5. The system should be scalable; for instance, in future, the system should servemillions of users.6. The application should solve the conflict in case two users try to modify the samefile in parallel.7. For debugging/accountability, the application should generate detailed logs forevery action done in the system.8. 90% of the users are reader users.______________________________________________________________________First Delivery:Part 1:● Please write the SRS document for this application.Part 2:In this part of the project, you need to draw the following architectures for the system.● Level 1: System Context diagram: In this level you need to show system usersand the other systems that it interacts with.● Level 2: Container diagram: it shows the high-level shape of the softwarearchitecture and how responsibilities are distributed across it.● Level 3: Component diagram: it shows how a container is made up of a numberof \"components\", what each of those components are and their responsibilities.In your architecture, you should also provide a short description for each component inyour architecture. You need also to show a short description on component interactions(relation) and what its purpose is.","fileType":"txt","fileNameEncy":"lma.txt(1)-file"}]]}